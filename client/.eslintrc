{
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended"
    ],
    "plugins": [
        "react"
    ],
    "parser": "babel-eslint",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "settings": {
        "react": {
            "createClass": "createReactClass", // Regex for Component Factory to use,
            // default to "createReactClass"
            "pragma": "React", // Pragma to use, default to "React"
            "version": "require('./package.json').dependencies.react", // React version. "detect" automatically picks the version you have installed.
            // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
            // default to latest and warns if missing
            // It will default to "detect" in the future
            "flowVersion": "0.53" // Flow version
        },
        "propWrapperFunctions": [
            // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
            "forbidExtraProps",
            {
                "property": "freeze",
                "object": "Object"
            },
            {
                "property": "myFavoriteWrapper"
            }
        ],
        "linkComponents": [
            // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
            "Hyperlink",
            {
                "name": "Link",
                "linkAttribute": "to"
            }
        ]
    },
    "rules": {
        "react/prop-types": 0,
        "array-element-newline": ["error", "consistent"],
        "arrow-body-style": ["error", "always"],
        "arrow-parens": ["error", "always"],
        "arrow-spacing": ["error"],
        "block-scoped-var": ["error"],
        "brace-style": ["error", "1tbs"],
        "callback-return": [
            "error",
            ["done", "proceed", "next", "onwards", "callback", "cb"]
        ],
        "camelcase": ["error", {
            "properties": "always"
        }],
        "comma-dangle": [
            "error",
            {
                "arrays": "never",
                "objects": "never",
                "imports": "never",
                "exports": "never",
                "functions": "ignore"
            }
        ],
        "comma-spacing": ["error", {
            "before": false,
            "after": true
        }],
        "comma-style": ["error", "last"],
        "curly": ["error", "all"],
        "eol-last": ["error"],
        "eqeqeq": ["error", "always"],
        "func-call-spacing": ["error"],
        //        "global-require":                  ["error"],
        "guard-for-in": ["error"],
        "handle-callback-err": ["error"],
        //        "id-length":                       ["error", {"min": 2}],
        "indent": [
            "error", 4, {
                "SwitchCase": 1,
                "MemberExpression": "off",
                "FunctionDeclaration": {
                    "body": 1,
                    "parameters": "off"
                },
                "FunctionExpression": {
                    "body": 1,
                    "parameters": "off"
                },
                "CallExpression": {
                    "arguments": "off"
                },
                "ArrayExpression": 1,
                "ObjectExpression": 1,
                "ignoredNodes": ["ConditionalExpression"]
            }
        ],
        "jsx-quotes": ["error", "prefer-double"],
        "key-spacing": [
            "error",
            {
                "beforeColon": false,
                "afterColon": true,
                "mode": "strict"
            }
        ],
        "keyword-spacing": ["error"],
        "line-comment-position": ["error", {
            "position": "above"
        }],
        "linebreak-style": ["error", "unix"],
        "max-depth": ["error", 8],
        "max-len": ["error", {
            "code": 100,
            "tabWidth": 4
        }],
        "max-lines": ["error", {
            "max": 400
        }],
        "max-lines-per-function": ["error", {
            "max": 175
        }],
        "max-nested-callbacks": ["error", {
            "max": 2
        }],
        "max-params": ["error", {
            "max": 4
        }],
        "max-statements": ["error", {
            "max": 175
        }],
        "max-statements-per-line": ["error", {
            "max": 1
        }],
        "multiline-ternary": ["error", "always-multiline"],
        "newline-per-chained-call": ["error", {
            "ignoreChainWithDepth": 2
        }],
        "no-alert": ["error"],
        "no-array-constructor": ["error"],
        "no-bitwise": ["error"],
        "no-cond-assign": ["error", "always"],
        "no-dupe-args": ["error"],
        "no-dupe-keys": ["error"],
        "no-duplicate-case": ["error"],
        "no-duplicate-imports": ["error"],
        "no-else-return": ["error"],
        "no-empty": ["error"],
        "no-empty-function": ["error"],
        "no-eq-null": ["error"],
        "no-eval": ["error"],
        "no-extra-boolean-cast": ["error"],
        "no-extra-label": ["error"],
        "no-extend-native": ["error"],
        "no-extra-parens": ["error", "all", {
            "nestedBinaryExpressions": false
        }],
        "no-extra-semi": ["error"],
        "no-floating-decimal": ["error"],
        "no-func-assign": ["error"],
        "no-global-assign": ["error"],
        "no-inner-declarations": ["error"],
        "no-invalid-regexp": ["error"],
        "no-irregular-whitespace": ["error"],
        "no-labels": ["error"],
        "no-lonely-if": ["error"],
        //        "no-magic-numbers":         ["error", {"ignoreArrayIndexes": true}],
        "no-mixed-operators": ["error"],
        "no-mixed-spaces-and-tabs": ["error", "smart-tabs"],
        "no-multi-assign": ["error"],
        "no-multi-spaces": ["error"],
        "no-multi-str": ["error"],
        "no-multiple-empty-lines": ["error", {
            "max": 2,
            "maxEOF": 1,
            "maxBOF": 1
        }],
        "no-nested-ternary": ["error"],
        "no-new": ["error"],
        "no-new-func": ["error"],
        "no-new-wrappers": ["error"],
        "no-octal": ["error"],
        "no-octal-escape": ["error"],
        "no-prototype-builtins": ["error"],
        "no-redeclare": ["error"],
        "no-return-assign": ["error", "always"],
        "no-return-await": ["error"],
        "no-sequences": ["error"],
        "no-sparse-arrays": ["error"],
        "no-trailing-spaces": ["error"],
        "no-undef": ["off"],
        "no-underscore-dangle": ["error"],
        "no-unneeded-ternary": ["error"],
        "no-useless-computed-key": ["error"],
        "no-useless-escape": ["error"],
        "no-var": ["error"],
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        // ^^Note: If this "no-undef" rule is enabled (set to `["error"]`), then all model globals
        // (e.g. `"Organization": true`) should be included above under "globals".
        // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        "no-unexpected-multiline": ["error"],
        "no-unsafe-finally": ["error"],
        "no-unreachable": ["error"],
        "no-unused-vars": [
            "error",
            {
                "caughtErrors": "all",
                "caughtErrorsIgnorePattern": "^unused($|[A-Z].*$)",
                "argsIgnorePattern": "^unused($|[A-Z].*$)",
                "varsIgnorePattern": "^unused($|[A-Z].*$)"
            }
        ],
        "no-use-before-define": ["error", {
            "functions": false
        }],
        // "object-curly-newline": ["error", {
        //     "ObjectExpression": "always",
        //     "ObjectPattern": {
        //         "multiline": true,
        //         "consistent": true
        //     },
        //     "ImportDeclaration": "never",
        //     "ExportDeclaration": {
        //         "multiline": true,
        //         "minProperties": 1
        //     }
        // }],
        "object-curly-spacing": ["error", "always"],
        "one-var": ["error", "never"],
        "operator-assignment": ["error", "always"],
        "operator-linebreak": ["error", "after"],
        "padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "prev": "*",
                "next": "return"
            }
        ],
        "prefer-arrow-callback": ["warn", {
            "allowNamedFunctions": true
        }],
        //        "prefer-const":                    ["warn", {"destructuring": "any"}],
        "prefer-template": ["error"],
        "quote-props": ["error", "as-needed"],
        "quotes": [
            "error",
            "single",
            {
                "avoidEscape": false,
                "allowTemplateLiterals": true
            }
        ],
        //        "require-await":                   ["error"],
        // "requireObjectKeysOnNewLine": ["error", {
        //     "allExcept": ["sameLine"]
        // }],

        "semi": ["error", "always"],
        "semi-spacing": ["error", {
            "before": false,
            "after": true
        }],
        "semi-style": ["error", "last"],
        "space-before-blocks": ["error"],
        "space-before-function-paren": [
            "error",
            {
                "anonymous": "always",
                "named": "never",
                "asyncArrow": "always"
            }
        ],
        "space-in-parens": ["error", "never"],
        "space-infix-ops": ["error"],
        "space-unary-ops": ["error", {
            "words": true,
            "nonwords": false
        }],
        "spaced-comment": ["error", "always", {
            "exceptions": ["-"]
        }],
        "switch-colon-spacing": ["error"],
        "sort-imports": ["error"],
        "template-tag-spacing": ["error", "always"]
    }
}
